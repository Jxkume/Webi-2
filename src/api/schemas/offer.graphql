scalar DateTime

type Offer {
  id: ID!
  author: User!
  category: Category!
  header: String!
  text: String!
  publicationDate: DateTime
  deletionDate: DateTime
}

type User {
  id: ID!
  username: String!
  email: String!
  password: String!
  role: String!
}

type Category {
  id: ID!
  name: String!
}

type Query {
  offerById(id: ID!): Offer
  offers: [Offer]
}

type Mutation {
  createOffer(input: OfferInput!): Offer
  updateOffer(id: ID!, input: OfferInput!): Offer
  deleteOffer(id: ID!): Offer
}

input OfferInput {
  category: ID!
  header: String!
  text: String!
  deletionDate: DateTime
}
